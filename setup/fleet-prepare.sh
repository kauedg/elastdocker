# Exit on Error
set -e

CA_FILE="/secrets/certs/ca/ca.crt"
CURL=$(which curl; echo "-s --cacert $CA_FILE -u ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}")
HEADERS=(-H "kbn-xsrf: true" -H "Content-Type: application/json" )
KIBANA_SERVICE="https://${KIBANA_HOST}:${KIBANA_PORT}"

FLEET_SERVER_NAME="elastdock-fleet-server"

RESPONSE=$($CURL "${HEADERS[@]}" -X GET "${KIBANA_SERVICE}/api/status" | jq -r ".status.plugins.fleet.level")
if ! [ "$RESPONSE" = "available" ]; then
    echo "Kibana not available"
    exit 2
fi

echo "Preparing Kibana for Fleet Server..."

echo "Creating Fleet Server host for '$FLEET_SERVER_NAME'"
DATA="{\"id\":\"${FLEET_SERVER_NAME}\",\"name\":\"${FLEET_SERVER_NAME}\",\"host_urls\":[\"https://fleet-server:8220\"],\"is_default\":true}"
RESPONSE=$($CURL "${HEADERS[@]}" -X POST "${KIBANA_SERVICE}/api/fleet/fleet_server_hosts" -d $DATA)

# create fleet server policy
echo "Creating Fleet Server Policy"
DATA="{ \
\"id\":\"fleet-server-policy\", \
\"name\":\"Fleet Server Policy\", \
\"description\":\"Fleet Server policy generated by Kibana\", \
\"namespace\":\"default\", \
\"has_fleet_server\":true, \
\"monitoring_enabled\":[\"logs\",\"metrics\"], \
\"is_default_fleet_server\":true \
}"
RESPONSE=$($CURL "${HEADERS[@]}" -X POST "${KIBANA_SERVICE}/api/fleet/agent_policies?sys_monitoring=true" -d "$DATA" -v)

#TODO edit output to https and CA
#curl 'https://192.168.1.209:5601/api/fleet/outputs/fleet-default-output' -X PUT --data-raw 
DATA="{ \
\"name\":\"default\", \
\"type\":\"elasticsearch\", \
\"hosts\":[\"https://elasticsearch:9200\"], \
\"is_default\":true, \
\"is_default_monitoring\":true, \
\"config_yaml\":\"ssl:\\n  certificate_authorities: [\\\"/certs/ca/ca.crt\\\"]\", \
\"ca_trusted_fingerprint\":\"\", \
\"proxy_id\":null \
}"

echo "$DATA"
RESPONSE=$($CURL "${HEADERS[@]}" -X PUT "${KIBANA_SERVICE}/api/fleet/outputs/fleet-default-output" -d "$DATA" -v)
echo "$RESPONSE"
