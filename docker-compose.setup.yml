version: '3.5'

networks:
  elastic:
    name: elastic
    external: false

services:
  keystore:
    image: elastdocker/elasticsearch:${ELK_VERSION}
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION}
    command: bash /setup/setup-keystore.sh
    user: "0"
    volumes:
        - ./secrets:/secrets
        - ./setup/:/setup/
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      FLEET_SERVER_ENABLE: ${FLEET_SERVER_ENABLE}

  certs:
    image: elastdocker/elasticsearch:${ELK_VERSION}
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION}
    command: bash /setup/setup-certs.sh
    user: "0"
    volumes:
      - ./secrets:/secrets
      - ./setup/:/setup
    environment:
      FLEET_SERVER_ENABLE: ${FLEET_SERVER_ENABLE}

  fleet-server:
    image: elastdocker/elastic-agent:${ELK_VERSION}
    build:
      context: fleet-server/
      args:
        ELK_VERSION: ${ELK_VERSION}
    entrypoint: bash /setup/fleet-prepare.sh
    networks:
      - elastic
    volumes:
      - ./secrets:/secrets
      - ./setup/:/setup
    environment:
      FLEET_SERVER_ENABLE: ${FLEET_SERVER_ENABLE}
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      KIBANA_HOST: ${KIBANA_HOST}
      KIBANA_PORT: ${KIBANA_PORT}
